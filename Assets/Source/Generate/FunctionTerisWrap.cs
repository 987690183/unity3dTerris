//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FunctionTerisWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FunctionTeris), typeof(System.Object));
		L.RegFunction("getInstance", getInstance);
		L.RegFunction("InitGame", InitGame);
		L.RegFunction("BeginGame", BeginGame);
		L.RegFunction("DealGameFunction", DealGameFunction);
		L.RegFunction("New", _CreateFunctionTeris);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("BigGridBG", get_BigGridBG, set_BigGridBG);
		L.RegVar("SmallGridBG", get_SmallGridBG, set_SmallGridBG);
		L.RegVar("isGameStop", get_isGameStop, set_isGameStop);
		L.RegVar("iScore", get_iScore, set_iScore);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFunctionTeris(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FunctionTeris obj = new FunctionTeris();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FunctionTeris.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			FunctionTeris o = FunctionTeris.getInstance();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FunctionTeris obj = (FunctionTeris)ToLua.CheckObject<FunctionTeris>(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			obj.InitGame(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BeginGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FunctionTeris obj = (FunctionTeris)ToLua.CheckObject<FunctionTeris>(L, 1);
			obj.BeginGame();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DealGameFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FunctionTeris obj = (FunctionTeris)ToLua.CheckObject<FunctionTeris>(L, 1);
			obj.DealGameFunction();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BigGridBG(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			SquareSprite[,] ret = obj.BigGridBG;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BigGridBG on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SmallGridBG(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			SquareSprite[,] ret = obj.SmallGridBG;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SmallGridBG on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isGameStop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			bool ret = obj.isGameStop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isGameStop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_iScore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			int ret = obj.iScore;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index iScore on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BigGridBG(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			SquareSprite[,] arg0 = (SquareSprite[,])ToLua.CheckObject(L, 2, typeof(SquareSprite[,]));
			obj.BigGridBG = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BigGridBG on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SmallGridBG(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			SquareSprite[,] arg0 = (SquareSprite[,])ToLua.CheckObject(L, 2, typeof(SquareSprite[,]));
			obj.SmallGridBG = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SmallGridBG on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isGameStop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isGameStop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isGameStop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_iScore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FunctionTeris obj = (FunctionTeris)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.iScore = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index iScore on a nil value");
		}
	}
}

